name: Build Gluon
on:
  push:
    branches:
      - master
      - 'v20[2-9][0-9].[0-9].x'
      - custom-site*
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:
    inputs:
      site_url:
        description: 'Gluon Site Repo to use'
        type: string
      site_branch:
        description: 'Gluon Site Branch to use'
        type: string
      autoupdater_enabled:
        description: 'Gluon autoupdater activation State'
        type: boolean
      autoupdater_branch:
        description: 'Gluon autoupdater default branch'
        type: string

env:
  GLUON_AUTOUPDATER_ENABLED: ${{ inputs.autoupdater_enabled || vars.GLUON_AUTOUPDATER_ENABLED }}
  GLUON_AUTOUPDATER_BRANCH: ${{ inputs.autoupdater_branch || vars.GLUON_AUTOUPDATER_BRANCH }}
  GLUON_SITE_URL: ${{ inputs.site_url || vars.GLUON_SITE_URL }}
  GLUON_SITE_BRANCH: ${{ inputs.site_branch || vars.GLUON_SITE_BRANCH }}

permissions:
  contents: read

jobs:
  changed:
    permissions:
      contents: read  # for dorny/paths-filter to fetch a list of changed files
      pull-requests: read  # for dorny/paths-filter to read pull requests
    runs-on: ubuntu-latest
    outputs:
      targets: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: actions/checkout@v3

      # Filter targets based on changed files
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: .github/filters.yml

  build_firmware:
    needs: changed
    if: ${{ needs.changed.outputs.targets != '[]' && needs.changed.outputs.targets != '' }}
    strategy:
      fail-fast: false
      matrix:
        # Read back changed targets to create build matrix
        target: ${{ fromJSON(needs.changed.outputs.targets) }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Dependencies
        run: sudo contrib/actions/install-dependencies.sh

      - name: Checkout Site
        run: contrib/actions/checkout-site.sh

      - name: Setup upterm session
        uses: lhotari/action-upterm@v1

      - name: Build
        run: contrib/actions/run-build.sh ${{ matrix.target }}

      - name: Archive build logs
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}_logs
          path: openwrt/logs

      - name: Archive build output
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}_output
          path: output

